==============================================================================
------------------------------------------------------------------------------
                                                       *PyFix.toggle()*
                           `PyFix.toggle`()
Toggle the plugin by calling the `enable`/`disable` methods respectively.

------------------------------------------------------------------------------
                                                       *PyFix.enable()*
                        `PyFix.enable`({scope})
Initializes the plugin, sets event listeners and internal state.

------------------------------------------------------------------------------
                                                      *PyFix.disable()*
                           `PyFix.disable`()
Disables the plugin, clear highlight groups and autocmds, closes side buffers and resets the internal state.


==============================================================================
------------------------------------------------------------------------------
                                                        *PyFix.options*
                            `PyFix.options`
PyFix configuration with its default values.

Type ~
`(table)`
Default values:
>lua
  PyFix.options = {
      -- Prints useful logs about what event are triggered, and reasons actions are executed.
      debug = false,
  }

<
------------------------------------------------------------------------------
                                                        *PyFix.setup()*
                       `PyFix.setup`({options})
Define your your-plugin-name setup.

Parameters ~
{options} `(table)` Module config table. See |PyFix.options|.

Usage ~
`require("your-plugin-name").setup()` (add `{}` with your |PyFix.options| table)


 vim:tw=78:ts=8:noet:ft=help:norl:
